[tox]
isolated_build = true
env_list =
    srclint
    testlint
    srctype
    testtype
    srcfmt
    docsfmt
    testfmt
    coverage
    doctest
    format
    docs
    deps
    py3{8,9,10,11}
    pypy3{8,9}
    executable
labels =
    checks = srclint,docslint,testlint,srctype,testtype,srcfmt,docsfmt,testfmt,py3{8,9,10,11},pypy3{8,9},doctest
    qa =     srclint,docslint,testlint,srctype,testtype,srcfmt,docsfmt,testfmt
    lint =   srclint,docslint,testlint
    type =                             srctype,testtype
    fmt =                                               srcfmt,docsfmt,testfmt
    tests =                                                                    py3{8,9,10,11},pypy3{8,9},doctest
requires =
    tox~=4.4.5

[testenv]
description = Execute tests
deps =
    {[testenv:deps]deps}
    pytest
commands =
    pytest tests

[testenv:deps]
description = Install dependencies
deps =
    clingo
    clingox
    inflection
    rich
    typer
    typing-extensions

[testenv:doctest]
description = Execute doctests
deps =
    {[testenv:deps]deps}
    {[testenv]deps}
commands =
    pytest --doctest-modules src

[testenv:coverage]
description = Execute tests with coverage
deps =
    {[testenv:deps]deps}
    {[testenv]deps}
    coverage
commands =
    coverage run -m pytest
    coverage report --rcfile=pyproject.toml -m
    coverage xml

[testenv:srclint]
description = Run linters on src
deps =
    {[testenv]deps}
    pylint
    tryceratops
commands =
    pylint --rcfile=pyproject.toml src
    tryceratops --config=pyproject.toml src

[testenv:docslint]
description = Run linters on docs
deps =
    {[testenv]deps}
    docsig
commands =
    docsig src

[testenv:testlint]
description = Run linters on tests
deps =
    {[testenv:deps]deps}
    {[testenv]deps}
    pylint
commands =
    pylint --rcfile=pyproject.toml tests

[testenv:srctype]
description = Run type checkers on src
deps =
    {[testenv:deps]deps}
    mypy
commands =
    mypy --strict --config-file=pyproject.toml src

[testenv:testtype]
description = Run type checkers on tests
deps =
    {[testenv:deps]deps}
    {[testenv]deps}
    mypy
commands =
    mypy --strict --config-file=pyproject.toml tests

[testenv:srcfmt]
description = Run formatters on src
deps =
    black
commands =
    black --quiet --check src

[testenv:docsfmt]
description = Run formatters on docs
deps =
    docformatter
    pydocstyle
commands =
    pydocstyle --convention=google src
    docformatter --config pyproject.toml src

[testenv:testfmt]
description = Run formatters on tests
deps =
    black
commands =
    black --quiet --check tests

[testenv:format]
description = Run formatters
deps =
    {[testenv:srcfmt]deps}
    {[testenv:testfmt]deps}
commands =
    docformatter --in-place --config pyproject.toml src
    black --quiet src
    black --quiet tests
allowlist_externals =
    black
    docformatter

[testenv:executable]
description = Build executable
deps =
    shiv
commands =
    shiv --console-script pyggp --compressed -o pyggp --python '/usr/bin/env -S python3 -O' .

[gh]
python =
    3.8 = python3.8
    3.9 = python3.9
    3.10 = python3.10
    3.11 = python3.11
    pypy3.8 = pypy3.8
    pypy3.9 = pypy3.9
