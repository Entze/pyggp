name: "CI"

on:
  push:
    paths:
      - "src/**.py"
      - "tests/**.py"
      - "**.md"
      - "pyproject.toml"
      - "poetry.lock"
      - ".pre-commit-config.yaml"
      - ".pymarkdown-config.json"
      - "noxfile.py"
      - ".github/workflows/ci.yaml"
  pull_request:

jobs:
  pre-commit:
    name: "âœ… Pre-Commit (Python ${{ matrix.python-version }}, ${{ matrix.os }})"
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.11' ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: pipx install poetry
      - uses: pre-commit/action@v3.0.0
  nox:
    name: "ðŸ§ª Nox CI (Python ${{ matrix.python-version }}, ${{ matrix.os }})"
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [ '3.11' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - run: poetry install --with ci --sync
      - uses: actions/cache@v3
        with:
          path: .nox
          key: ${{ runner.os }}-python${{ matrix.python-version }}-nox-${{ hashFiles('**/noxfile.py') }}
      - run: poetry run nox --tags ci
