name: "Tests"

on:
  push:
    paths:
      - "src/**.py"
      - "tests/**.py"
      - "noxfile.py"
      - ".github/workflows/tests.yaml"
      - "!src/pyggp/_version.py"
  pull_request:

jobs:
  nox:
    name: "ðŸ§ª Nox Tests (Python ${{ matrix.python-version }}, ${{ matrix.os }})"
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - 'pypy3.9'
          - '3.10'
          - 'pypy3.10'
          - '3.11'
          - '3.12'
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        exclude:
          - os: windows-latest
            python-version: 'pypy3.9'
          - os: macos-latest
            python-version: 'pypy3.9'
          - os: macos-latest
            python-version: 'pypy3.10'
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - run: poetry install --with ci
      - uses: actions/cache@v4
        with:
          path: .nox
          key: ${{ github.ref_name }}-${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-python${{ matrix.python-version }}-.nox-${{ hashFiles('**/noxfile.py', '**/pyproject.toml', '**/poetry.lock') }}
      - run: poetry run nox -R --sessions unittests-${{ matrix.python-version }}
      - run: poetry run nox -R --sessions doctests-${{ matrix.python-version }}
  coverage:
    name: "ðŸ“Š Coverage (Python ${{ matrix.python-version }}, ${{ matrix.os }})"
    needs: nox
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [ '3.12' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - run: poetry install --with ci
      - uses: actions/cache@v4
        with:
          path: .nox
          key: ${{ github.ref_name }}-${{ github.workflow }}-${{ github.job }}-${{ runner.os }}-python${{ matrix.python-version }}-.nox-${{ hashFiles('**/noxfile.py', '**/pyproject.toml', '**/poetry.lock') }}
      - run: poetry run nox -R --session coverage
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
