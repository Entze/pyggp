[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyggp"
version = "0.0.0"
description = "A Python implementation of the General Game Playing (GGP) framework."
authors = ["Lukas Grassauer <lukas@grassauer.eu>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "pyggp", from = "src" },
]
keywords = ["ggp", "general game playing", "game", "gdl"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Games/Entertainment :: Turn Based Strategy",
    "Typing :: Typed"
]

[tool.poetry.scripts]
pyggp = "pyggp.app:app"

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
typing-extensions = ">=4.5.0,<4.6.0"
exceptiongroup = ">=1.1.0,<1.2.0"
clingo = ">=5.6.2,<5.7.0"
clingox = ">=1.2.0,<1.3.0"
typer = ">=0.7.0,<0.8.0"
rich = ">=13.3.1,<13.4.0"
inflection = ">=0.5.1,<0.6.0"


[tool.poetry.group.ci]
optional = true

[tool.poetry.group.ci.dependencies]
nox = "=2022.11.21"
tomli = ">=2.0.1,<2.1.0"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# SCM
pre-commit = ">=3.0.4,<3.1.0"
commitizen = ">=2.42.0,<2.43.0"
# Formatting
black = ">=23.1.0,<23.2.0"
docformatter = ">=1.5.1,<1.6.0"
isort = ">=5.12.0,<5.13.0"
# Linting
docsig = ">=0.34.0,<0.35.0"
mypy = ">=1.0.0,<1.1.0"
pydocstyle = ">=6.3.0,<6.4.0"
pylint = ">=2.16.2,<2.17.0"
tryceratops = ">=1.1.0,<1.2.0"
# Testing
coverage = ">=7.1.0,<7.2.0"
pytest = ">=7.2.1,<7.3.0"
# Task automation
nox = "=2022.11.21"
tomli = ">=2.0.1,<2.1.0"
shiv = ">=1.0.3,<1.1.0"
pytest-unordered = ">=0.5.2,<0.6.0"
ruff = ">=0.0.0,<0.2.0"


[tool.poetry.group.bin]
optional = true

[tool.poetry.group.bin.dependencies]
shiv = ">=1.0.3,<1.1.0"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = ">=9.1.1,<9.2.0"
mkdocs-autorefs = ">=0.4.1,<0.5.0"
mkdocstrings = { version = ">=0.20.0,<0.21.0", extras = ["python"] }
mkdocs-pymdownx-material-extras = ">=2.4.2,<2.5.0"
pymdown-extensions = ">=9.10,<9.11"
pygments = ">=2.14.0,<2.15.0"


[tool.black]
line-length = 120


[tool.coverage.run]
source = ['pyggp']


[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "def __repr__",
    "if __name__ == .main.:"
]

[tool.commitizen]
name = "cz_conventional_commits"
bump_message = "chore(release): $current_version -> $new_version"
tag_format = "$version"
update_changelog_on_bump = true
annotated_tag = true
gpg_sign = true
version = "0.0.0"
version_files = [
    "pyproject.toml:version",
    "src/pyggp/_version.py:__version__"
]


[tool.docformatter]
recursive = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true


[tool.docsig]
check-class = true
check-dunders = false
check-overridden = true
check-protected = false
check-property-returns = true
summary = true


[tool.isort]
profile = "black"
py_version = 38
line_length = 120


[tool.mypy]
implicit_reexport = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true


[tool.pydocstyle]
convention = "google"


[tool.pylint]
max-line-length = 120
fail-under = 10
disable = [# Docstrings are checked by pydocstyle and docsig
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.ruff]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "EM",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "RUF",
]
ignore = [
    "S101",
    "ANN101",
    "ANN102",
    "G002",
    "FBT002",
]
fixable = ["I", "UP", "D", "COM", "PT"]
line-length = 120
target-version = "py38"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D", "SLF", "INP"]

[tool.ruff.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.pydocstyle]
convention = "google"


[tool.tryceratops]
exclude = [
    "tests",
    "docs",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".github"
]
