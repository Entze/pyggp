[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyggp"
version = "0.0.0"
description = "A Python implementation of the General Game Playing (GGP) framework."
authors = ["Lukas Grassauer <lukas@grassauer.eu>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "pyggp", from = "src" },
]
keywords = ["ggp", "general game playing", "game", "gdl"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Topic :: Games/Entertainment :: Simulation",
    "Topic :: Games/Entertainment :: Turn Based Strategy",
    "Typing :: Typed"
]

[tool.poetry.scripts]
pyggp = "pyggp.app:app"

[tool.poetry.dependencies]
python = "~3.11"
clingo = "~5.6.2"
clingox = "~1.2.0"
typer = "~0.7.0"
rich = "~13.3.1"
inflection = "~0.5.1"
pygments-clingo = "~0.1.8"


[tool.poetry.group.ci]
optional = true

[tool.poetry.group.ci.dependencies]
tox = "~4.4.5"


[tool.poetry.group.citests]
optional = true

[tool.poetry.group.citests.dependencies]
tox-gh = "~1.0.0"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
# SCM
pre-commit = "~3.0.4"
commitizen = "~2.42.0"
# Formatting
black = "~23.1.0"
docformatter = "~1.5.1"
# Linting
docsig = "~0.34.0"
mypy = "~1.0.0"
pydocstyle = "~6.3.0"
pylint = "~2.16.2"
tryceratops = "~1.1.0"
# Testing
coverage = "~7.1.0"
pytest = "~7.2.1"
tox = "~4.4.5"
xdoctest = "~1.1.1"
# Misc
pygments = "~2.14.0"


[tool.poetry.group.bin]
optional = true

[tool.poetry.group.bin.dependencies]
shiv = "~1.0.3"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-material = "~9.1.1"
mkdocs-autorefs = "~0.4.1"
mkdocstrings = {version = "~0.20.0", extras=["python"]}


[tool.black]
line-length = 120


[tool.coverage.run]
source = ['pyggp']


[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "def __repr__",
    "if __name__ == .main.:"
]

[tool.commitizen]
name = "cz_conventional_commits"
bump_message = "chore(release): $current_version -> $new_version"
tag_format = "$version"
update_changelog_on_bump = true
annotated_tag = true
gpg_sign = true
version = "0.0.0"
version_files = [
    "pyproject.toml:version",
    "src/pyggp/_version.py:__version__"
]


[tool.docformatter]
recursive = true
wrap-summaries = 120
wrap-descriptions = 120
blank = true


[tool.docsig]
check-dunders = false
check-overridden = false
check-protected = false
summary = true


[tool.mypy]
implicit_reexport = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true


[tool.pylint]
max-line-length = 120
fail-under = 10
disable = [ # Docstrings are checked by pydocstyle and darglint
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]


[tool.tryceratops]
exclude = [
    "tests",
    "docs",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".github"
]
